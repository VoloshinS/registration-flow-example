{"version":3,"sources":["modules/core/redux/types.ts","modules/core/redux/constants.ts","modules/core/redux/actions.ts","modules/core/api.ts","modules/core/redux/saga.ts","modules/core/redux/selectors.ts","modules/core/redux/index.ts","modules/core/redux/reducer.ts","store/reducers.ts","store/sagas.ts","store/index.ts","modules/core/components/Layout.tsx","modules/core/components/Link.tsx","modules/core/components/AppBar.tsx","modules/core/components/Spinner.tsx","modules/core/components/Form.tsx","modules/core/components/PrivateRoute.tsx","modules/registration/components/RegistrationForm.tsx","modules/login/components/LoginForm.tsx","modules/profile/components/Profile.tsx","App.tsx","index.tsx"],"names":["ADD_USER","ADD_USER_SUCCESS","ADD_USER_FAILURE","SIGN_IN_USER","SIGN_IN_USER_SUCCESS","SIGN_IN_USER_FAILURE","SIGN_OUT_USER","DELETE_USER","UPDATE_USER","initialState","user","isAuthorized","addUserSuccess","type","payload","signInUserSuccess","getUsers","usersStringified","localStorage","getItem","JSON","parse","setUsers","users","setItem","stringify","createUser","find","username","Error","loginUser","userInDb","password","removeUser","userIndex","findIndex","slice","changeUser","description","addUser","signInUser","deleteUser","updateUser","watchCreate","watchLogin","watchDelete","watchUpdate","userSaga","action","call","put","push","error","message","takeEvery","all","getStateSlice","get","getIsAuthorized","flow","getUser","getError","userReducer","state","history","combineReducers","router","connectRouter","rootSaga","createHashHistory","sagaMiddleware","createSagaMiddleware","useStyles","makeStyles","createStyles","container","flexGrow","overflow","Layout","children","classes","CssBaseline","className","Container","maxWidth","Link","to","component","RouterLink","theme","root","flexShrink","menuButton","marginRight","spacing","title","link","color","palette","background","default","AppTopBar","onLogout","AppBar","position","Toolbar","Typography","variant","Button","onClick","height","display","justifyContent","alignItems","paper","marginTop","flexDirection","avatar","margin","backgroundColor","secondary","main","form","width","submit","Form","buttonLabel","onSubmit","useState","setUsername","setPassword","handleUsernameChange","useCallback","e","target","value","handlePasswordChange","handleSubmit","preventDefault","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","onChange","autoFocus","PrivateRoute","rest","useSelector","render","location","pathname","from","RegistrationForm","dispatch","useDispatch","LoginForm","buttonContainer","Profile","setDescription","styles","handleChangeDesc","handleDelete","multiline","App","appName","handleLogout","path","store","middlewares","routerMiddleware","middlewareEnhancer","applyMiddleware","composedEnhancers","composeWithDevTools","rootReducer","creteRootReducer","createStore","run","saga","configureStore","ReactDOM","document","getElementById"],"mappings":"wSAAaA,EAAW,WACXC,EAAmB,mBACnBC,EAAmB,mBACnBC,EAAe,eACfC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAgB,gBAEhBC,EAAc,cACdC,EAAc,cCLdC,EAA0B,CACrCC,KAAM,KACNC,cAAc,G,qCCeT,SAASC,EAAeF,GAC7B,MAAO,CACLG,KAAMZ,EACNa,QAASJ,GAkBN,SAASK,EAAkBL,GAChC,MAAO,CACLG,KAAMT,EACNU,QAASJ,G,oBC1CPM,EAAW,WACf,IAAMC,EAAmBC,aAAaC,QAAQ,SAE9C,OAAOF,EAAmBG,KAAKC,MAAMJ,GAAoB,IAGrDK,EAAW,SAACC,GAChBL,aAAaM,QAAQ,QAASJ,KAAKK,UAAUF,KAGlCG,EAAa,SAAChB,GACzB,IAAMa,EAAQP,IAEd,GAAIW,eAAKJ,EAAO,CAAEK,SAAUlB,EAAKkB,WAC/B,MAAM,IAAIC,MAAM,iBAKlB,OAFAP,EAAS,GAAD,mBAAKC,GAAL,CAAYb,KAEbA,GAGIoB,EAAY,SAACpB,GACxB,IAAMa,EAAQP,IACRe,EAAWJ,eAAKJ,EAAO,CAAEK,SAAUlB,EAAKkB,WAE9C,IAAKG,EACH,MAAM,IAAIF,MAAM,uBAGlB,GAAIE,EAASC,WAAatB,EAAKsB,SAC7B,MAAM,IAAIH,MAAM,kBAGlB,OAAOE,GAGIE,EAAa,SAACL,GACzB,IAAML,EAAQP,IACRkB,EAAYC,oBAAUZ,EAAO,CAAEK,aAIrC,OAFAN,EAAS,GAAD,mBAAKC,EAAMa,MAAM,EAAGF,IAApB,YAAmCX,EAAMa,MAAMF,EAAY,MAE5DN,GAGIS,EAAa,SAAC,GAAqC,IAAnCT,EAAkC,EAAlCA,SAAUU,EAAwB,EAAxBA,YAC/Bf,EAAQP,IACRkB,EAAYC,oBAAUZ,EAAO,CAAEK,aAYrC,OAVAN,EAAS,GAAD,mBACHC,EAAMa,MAAM,EAAGF,IADZ,gBAGDX,EAAMW,GAHL,CAIJN,WACAU,iBALI,YAOHf,EAAMa,MAAMF,EAAY,MAGtBN,G,WC/CCW,G,WAUAC,G,WAUAC,G,WAIAC,G,WAIAC,G,WAIAC,I,WAIAC,I,WAIAC,I,WAIeC,IA5CzB,SAAUR,EAAQS,GAAlB,uEAEuB,OAFvB,kBAE6BC,YAAKvB,EAAYsB,EAAOlC,SAFrD,OAGI,OADMJ,EAFV,gBAGUwC,YAAItC,EAAeF,IAH7B,OAII,OAJJ,SAIUwC,YAAIC,YAAK,MAJnB,+BAMI,OANJ,oCAMUD,aFMqBE,EENF,KAAEC,QFOtB,CACLxC,KAAMX,EACNY,QAASsC,KEfb,kCFYO,IAAwBA,IEZ/B,iBAUA,SAAUZ,EAAWQ,GAArB,uEAEuB,OAFvB,kBAE6BC,YAAKnB,EAAWkB,EAAOlC,SAFpD,OAGI,OADMJ,EAFV,gBAGUwC,YAAInC,EAAkBL,IAHhC,OAII,OAJJ,SAIUwC,YAAIC,YAAK,MAJnB,+BAMI,OANJ,oCAMUD,aFiBwBE,EEjBF,KAAEC,QFkBzB,CACLxC,KAAMR,EACNS,QAASsC,KE1Bb,kCFuBO,IAA2BA,IEvBlC,iBAUA,SAAUX,EAAWO,GAArB,iEACE,OADF,SACQC,YAAKhB,EAAYe,EAAOlC,SADhC,uCAIA,SAAU4B,EAAWM,GAArB,iEACE,OADF,SACQC,YAAKZ,EAAYW,EAAOlC,SADhC,uCAIA,SAAU6B,IAAV,iEACE,OADF,SACQW,YAAUtD,EAAUuC,GAD5B,uCAIA,SAAUK,KAAV,iEACE,OADF,SACQU,YAAUnD,EAAcqC,GADhC,uCAIA,SAAUK,KAAV,iEACE,OADF,SACQS,YAAU/C,EAAakC,GAD/B,uCAIA,SAAUK,KAAV,iEACE,OADF,SACQQ,YAAU9C,EAAakC,GAD/B,uCAIe,SAAUK,KAAV,iEACb,OADa,SACPQ,YAAI,CAACZ,IAAeC,KAAcC,KAAeC,OAD1C,uC,aCxDTU,GAAgBC,eJFU,aIInBC,GAAkBC,gBAAKH,GAAeC,eAAI,iBAC1CG,GAAUD,gBAAKH,GAAeC,eAAI,SAClCI,GAAWF,gBAAKH,GAAeC,eAAI,UCDnCK,GAAW,eLLQ,aMajB,WAGD,IAFZC,EAEW,uDAFQtD,EACnBuC,EACW,uCACX,OAAQA,EAAOnC,MACb,KAAKV,EACL,KAAKH,EACH,OAAO,eACF+D,GAEP,KAAK3D,EACL,KAAKH,EACH,OAAO,eACF8D,EADL,CAEErD,KAAMsC,EAAOlC,QACbH,cAAc,EACdyC,MAAO,OAEX,KAAK/C,EACL,KAAKH,EACH,OAAO,eACF6D,EADL,CAEEpD,cAAc,EACdD,KAAM,KACN0C,MAAOJ,EAAOlC,UAElB,KAAKR,EACL,KAAKC,EACH,OAAO,eACFwD,EADL,CAEEpD,cAAc,EACdD,KAAM,OAEV,KAAKF,EACH,OAAO,eACFuD,EADL,CAEErD,KAAK,eACAqD,EAAMrD,KADP,GAECsC,EAAOlC,WAGhB,QACE,OAAOiD,MCnDE,YAACC,GAAD,OACbC,0BAAgB,aACdC,OAAQC,YAAcH,IACnBF,M,YCLkBM,IAAV,SAAUA,KAAV,iEACb,OADa,SACPb,YAAI,CAACR,OADE,wCCKR,IAAMiB,GAAUK,cAEjBC,GAAiBC,c,oDCNjBC,GAAYC,cAAW,kBAC3BC,aAAa,CACXC,UAAW,CACTC,SAAU,EACVC,SAAU,aAsBDC,GAbW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrBC,EAAUR,KAEhB,OACE,kBAAC,WAAD,KACE,kBAACS,GAAA,EAAD,MACA,yBAAKC,UAAWF,EAAQL,WACtB,kBAACQ,GAAA,EAAD,CAAWC,SAAS,MAAML,M,0DCPnBM,GARS,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,GAAIP,EAA0B,EAA1BA,SAAUG,EAAgB,EAAhBA,UACvC,OACE,kBAAC,KAAD,CAASK,UAAWC,KAAYF,GAAIA,EAAIJ,UAAWA,GAChDH,ICJDP,GAAYC,cAAW,SAACgB,GAAD,OAC3Bf,aAAa,CACXgB,KAAM,CACJC,WAAY,GAEdC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLnB,SAAU,GAEZoB,KAAM,CACJC,MAAOR,EAAMS,QAAQC,WAAWC,cAgDvBC,GArCc,SAAC,GAAuC,IAArCN,EAAoC,EAApCA,MAAOpF,EAA6B,EAA7BA,aAAc2F,EAAe,EAAfA,SAC7CtB,EAAUR,KAEhB,OACE,yBAAKU,UAAWF,EAAQU,MACtB,kBAACa,GAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYC,QAAQ,KAAKzB,UAAWF,EAAQe,OAC1C,kBAAC,GAAD,CAAMT,GAAG,IAAIJ,UAAWF,EAAQgB,MAC7BD,IAGJpF,EAEC,kBAACiG,GAAA,EAAD,CAAQX,MAAM,UAAUY,QAASP,GAAjC,UAIA,oCACE,kBAACM,GAAA,EAAD,CAAQX,MAAM,WACZ,kBAAC,GAAD,CAAMX,GAAG,gBAAgBJ,UAAWF,EAAQgB,MAA5C,aAIF,kBAACY,GAAA,EAAD,CAAQX,MAAM,WACZ,kBAAC,GAAD,CAAMX,GAAG,SAASJ,UAAWF,EAAQgB,MAArC,e,WCrDEvB,cAAW,kBAC3BC,aAAa,CACXgB,KAAM,CACJoB,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,e,+CCEZzC,GAAYC,cAAW,SAAAgB,GAAK,MAAK,CACrCyB,MAAO,CACLC,UAAW1B,EAAMK,QAAQ,GACzBiB,QAAS,OACTK,cAAe,SACfH,WAAY,UAEdI,OAAQ,CACNC,OAAQ7B,EAAMK,QAAQ,GACtByB,gBAAiB9B,EAAMS,QAAQsB,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPR,UAAW1B,EAAMK,QAAQ,IAE3B8B,OAAQ,CACNN,OAAQ7B,EAAMK,QAAQ,EAAG,EAAG,QAiFjB+B,GAtES,SAAC,GAA6C,IAA3C9B,EAA0C,EAA1CA,MAAO+B,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,SAAU3E,EAAY,EAAZA,MACjD4B,EAAUR,KADmD,EAEnCwD,mBAAS,IAF0B,oBAE5DpG,EAF4D,KAElDqG,EAFkD,OAGnCD,mBAAS,IAH0B,oBAG5DhG,EAH4D,KAGlDkG,EAHkD,KAK7DC,EAAuBC,uBAAY,SAAAC,GAAC,OAAIJ,EAAYI,EAAEC,OAAOC,SAAQ,IACrEC,EAAuBJ,uBAAY,SAAAC,GAAC,OAAIH,EAAYG,EAAEC,OAAOC,SAAQ,IAErEE,EAAeL,uBACnB,SAAAC,GACEA,EAAEK,iBAEFX,EAAS,CAAEnG,WAAUI,eAEvB,CAACJ,EAAUI,EAAU+F,IAGvB,OACE,kBAAC5C,GAAA,EAAD,CAAWI,UAAU,OAAOH,SAAS,MACnC,kBAACH,GAAA,EAAD,MACA,yBAAKC,UAAWF,EAAQkC,OACtB,kBAACyB,GAAA,EAAD,CAAQzD,UAAWF,EAAQqC,QACzB,kBAAC,KAAD,OAEF,kBAACX,GAAA,EAAD,CAAYnB,UAAU,KAAKoB,QAAQ,MAChCZ,GAEH,0BAAMb,UAAWF,EAAQ0C,KAAMkB,YAAU,EAACb,SAAUU,GAClD,kBAACI,GAAA,EAAD,CACElC,QAAQ,WACRW,OAAO,SACPwB,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHC,MAAM,WACNC,KAAK,WACLC,aAAa,WACbC,SAAUjB,EACVI,MAAO3G,EACPyH,WAAS,IAEX,kBAACR,GAAA,EAAD,CACElC,QAAQ,WACRW,OAAO,SACPwB,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNpI,KAAK,WACLmI,GAAG,WACHI,SAAUZ,EACVD,MAAOvG,EACPmH,aAAa,qBAEd/F,GAAS,6BAAMA,GAChB,kBAACwD,GAAA,EAAD,CACE/F,KAAK,SACLkI,WAAS,EACTpC,QAAQ,YACRV,MAAM,UACNf,UAAWF,EAAQ4C,QAElBE,O,SCvEEwB,GAnBiB,SAAC,GAA2B,IAAzBvE,EAAwB,EAAxBA,SAAawE,EAAW,6BACnD5I,EAAe6I,YAAY9F,IAC3B+F,EAASrB,uBACb,gBAAGsB,EAAH,EAAGA,SAAH,OACE/I,EACEoE,EAEA,kBAAC,KAAD,CACEO,GAAI,CACFqE,SAAU,SACV5F,MAAO,CAAE6F,KAAMF,QAIvB,CAAC3E,EAAUpE,IAEb,OAAO,kBAAC,KAAD,iBAAW4I,EAAX,CAAiBE,OAAQA,MCNnBI,GAdc,WAC3B,IAAMC,EAAWC,cACX3G,EAAQoG,YAAY3F,IAEpB4E,EAAeL,uBACnB,SAAC1H,GACCoJ,EfCC,SAAiBpJ,GACtB,MAAO,CACLG,KAAMb,EACNc,QAASJ,GeJE6B,CAAQ7B,MAEnB,CAACoJ,IAGH,OAAO,kBAAC,GAAD,CAAM/D,MAAM,eAAe+B,YAAY,WAAWC,SAAUU,EAAcrF,MAAOA,KCI3E4G,GAdO,WACpB,IAAMF,EAAWC,cACX3G,EAAQoG,YAAY3F,IAEpB4E,EAAeL,uBACnB,SAAC1H,GACCoJ,EhBqBC,SAAoBpJ,GACzB,MAAO,CACLG,KAAMV,EACNW,QAASJ,GgBxBE8B,CAAW9B,MAEtB,CAACoJ,IAGH,OAAO,kBAAC,GAAD,CAAM/D,MAAM,UAAU+B,YAAY,QAAQC,SAAUU,EAAcrF,MAAOA,KCT5EoB,GAAYC,cAAW,SAAAgB,GAAK,OAChCf,aAAa,CACXC,UAAW,CACTwC,UAAW1B,EAAMK,QAAQ,IAE3BmE,gBAAiB,CACflD,QAAS,OACTC,eAAgB,eAChBG,UAAW1B,EAAMK,QAAQ,SAyDhBoE,GApDK,WAClB,IAAMJ,EAAWC,cACXrJ,EAAO8I,YAAY5F,IAFD,EAGcoE,mBAAStH,EAAK4B,aAH5B,oBAGjBA,EAHiB,KAGJ6H,EAHI,KAKlBC,EAAS5F,KACTiE,EAAeL,uBACnB,SAAAC,GACEA,EAAEK,iBACFoB,EjB8BC,YAAgF,IAA1DlI,EAAyD,EAAzDA,SAAUU,EAA+C,EAA/CA,YACrC,MAAO,CACLzB,KAAML,EACNM,QAAS,CAAEc,WAAUU,gBiBhCjBI,CAAW,eACNhC,EADK,CAER4B,oBAIN,CAACwH,EAAUpJ,EAAM4B,IAEb+H,EAAmBjC,uBAAY,SAAAC,GACnC8B,EAAe9B,EAAEC,OAAOC,SACvB,IAEG+B,EAAelC,uBAAY,WjBwB5B,IAAoBxG,EiBvBvBkI,GjBuBuBlI,EiBvBHlB,EAAKkB,SjBwBpB,CACLf,KAAMN,EACNO,QAASc,OiBzBR,CAAClB,EAAMoJ,IAEV,OACE,yBAAK5E,UAAWkF,EAAOzF,WACrB,kBAACM,GAAA,EAAD,MACA,kBAACyB,GAAA,EAAD,CAAYC,QAAQ,MAAMjG,EAAKkB,UAC/B,0BAAMmG,SAAUU,GACd,kBAACI,GAAA,EAAD,CACEI,MAAM,cACND,GAAG,cACHD,WAAS,EACTwB,WAAS,EACTnB,SAAUiB,EACV9B,MAAOjG,IAET,yBAAK4C,UAAWkF,EAAOH,iBACrB,kBAACrD,GAAA,EAAD,CAAQ/F,KAAK,SAAS8F,QAAQ,YAAYV,MAAM,YAAYY,QAASyD,GAArE,kBAGA,kBAAC1D,GAAA,EAAD,CAAQ/F,KAAK,SAAS8F,QAAQ,YAAYV,MAAM,WAAhD,sBCtBKuE,GA5BQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClBX,EAAWC,cACXpJ,EAAe6I,YAAY9F,IAE3BgH,EAAetC,uBAAY,WAC/B0B,ElBoCK,CACLjJ,KAAMP,MkBpCL,CAACwJ,IAEJ,OACE,kBAAC,IAAD,CAAiB9F,QAASA,IACxB,kBAAC,GAAD,CAAQ+B,MAAO0E,EAAS9J,aAAcA,EAAc2F,SAAUoE,IAC9D,kBAAC,GAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOC,KAAK,iBACV,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOA,KAAK,UACV,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAcA,KAAK,KACjB,kBAAC,GAAD,WC3BNC,GXIS,SAAwBnK,GACrC,IAAMoK,EAAc,CAACvG,GAAgBwG,YAAiB9G,KAChD+G,EAAqBC,kBAAe,WAAf,EAAmBH,GACxCI,EAAoBC,8BAAoBH,GACxCI,EAAcC,GAAiBpH,IAC/B4G,EAAQS,sBAAYF,EAAa1K,EAAcwK,GAQrD,OANA3G,GAAegH,IAAIC,IAMZX,EWjBKY,GAEdC,IAAShC,OACP,kBAAC,IAAD,CAAUmB,MAAOA,IACf,kBAAC,GAAD,CAAKH,QAAQ,cAEfiB,SAASC,eAAe,W","file":"static/js/main.05fe83d5.chunk.js","sourcesContent":["export const ADD_USER = 'ADD_USER';\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS';\nexport const ADD_USER_FAILURE = 'ADD_USER_FAILURE';\nexport const SIGN_IN_USER = 'SIGN_IN_USER';\nexport const SIGN_IN_USER_SUCCESS = 'SIGN_IN_USER_SUCCESS';\nexport const SIGN_IN_USER_FAILURE = 'SIGN_IN_USER_FAILURE';\nexport const SIGN_OUT_USER = 'SIGN_OUT_USER';\n\nexport const DELETE_USER = 'DELETE_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\n\nexport interface User {\n  username?: string;\n  password?: string;\n  description?: string;\n}\n\nexport interface UserState {\n  user?: Partial<User> | null;\n  isAuthorized: boolean;\n  error?: string | null;\n}\n\nexport interface AddUser {\n  type: typeof ADD_USER;\n  payload: User;\n}\n\ninterface AddUserSuccess {\n  type: typeof ADD_USER_SUCCESS;\n  payload: User;\n}\n\ninterface AddUserFailure {\n  type: typeof ADD_USER_FAILURE;\n  payload: string;\n}\n\nexport interface SignInUser {\n  type: typeof SIGN_IN_USER;\n  payload: User;\n}\n\ninterface SignInUserSuccess {\n  type: typeof SIGN_IN_USER_SUCCESS;\n  payload: User;\n}\n\ninterface SignInUserFailure {\n  type: typeof SIGN_IN_USER_FAILURE;\n  payload: string;\n}\nexport interface UpdateUser {\n  type: typeof UPDATE_USER;\n  payload: Partial<User>;\n}\n\nexport interface SignOutUser {\n  type: typeof SIGN_OUT_USER;\n}\n\nexport interface DeleteUser {\n  type: typeof DELETE_USER;\n  payload: string;\n}\n\nexport type UserActionTypes =\n  | AddUser\n  | AddUserSuccess\n  | AddUserFailure\n  | SignInUser\n  | SignInUserSuccess\n  | SignInUserFailure\n  | SignOutUser\n  | UpdateUser\n  | DeleteUser;\n","import { UserState } from './types';\n\nexport const USER_REDUCER_KEY = 'userState';\n\nexport const initialState: UserState = {\n  user: null,\n  isAuthorized: false,\n};\n","import {\n  User,\n  SIGN_IN_USER,\n  SIGN_IN_USER_SUCCESS,\n  SIGN_IN_USER_FAILURE,\n  ADD_USER,\n  ADD_USER_SUCCESS,\n  ADD_USER_FAILURE,\n  DELETE_USER,\n  UPDATE_USER,\n  UserActionTypes,\n  SIGN_OUT_USER,\n} from './types';\n\nexport function addUser(user: User): UserActionTypes {\n  return {\n    type: ADD_USER,\n    payload: user,\n  };\n}\n\nexport function addUserSuccess(user: User): UserActionTypes {\n  return {\n    type: ADD_USER_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function addUserFailure(error: string): UserActionTypes {\n  return {\n    type: ADD_USER_FAILURE,\n    payload: error,\n  };\n}\n\nexport function signInUser(user: User): UserActionTypes {\n  return {\n    type: SIGN_IN_USER,\n    payload: user,\n  };\n}\n\nexport function signInUserSuccess(user: User): UserActionTypes {\n  return {\n    type: SIGN_IN_USER_SUCCESS,\n    payload: user,\n  };\n}\n\nexport function signInUserFailure(error: string): UserActionTypes {\n  return {\n    type: SIGN_IN_USER_FAILURE,\n    payload: error,\n  };\n}\n\nexport function signOutUser(): UserActionTypes {\n  return {\n    type: SIGN_OUT_USER,\n  };\n}\n\nexport function updateUser({ username, description }: Partial<User>): UserActionTypes {\n  return {\n    type: UPDATE_USER,\n    payload: { username, description },\n  };\n}\n\nexport function deleteUser(username: string): UserActionTypes {\n  return {\n    type: DELETE_USER,\n    payload: username,\n  };\n}\n","import { find, findIndex } from 'lodash';\nimport { User } from './redux/types';\n\nconst getUsers = () => {\n  const usersStringified = localStorage.getItem('users');\n\n  return usersStringified ? JSON.parse(usersStringified) : [];\n};\n\nconst setUsers = (users: User[]) => {\n  localStorage.setItem('users', JSON.stringify(users));\n};\n\nexport const createUser = (user: User) => {\n  const users = getUsers();\n\n  if (find(users, { username: user.username })) {\n    throw new Error('Already exist');\n  }\n\n  setUsers([...users, user]);\n\n  return user;\n};\n\nexport const loginUser = (user: User) => {\n  const users = getUsers();\n  const userInDb = find(users, { username: user.username });\n\n  if (!userInDb) {\n    throw new Error('User does not exist');\n  }\n\n  if (userInDb.password !== user.password) {\n    throw new Error('Wrong password');\n  }\n\n  return userInDb;\n};\n\nexport const removeUser = (username: string) => {\n  const users = getUsers();\n  const userIndex = findIndex(users, { username });\n\n  setUsers([...users.slice(0, userIndex), ...users.slice(userIndex + 1)]);\n\n  return username;\n};\n\nexport const changeUser = ({ username, description }: User) => {\n  const users = getUsers();\n  const userIndex = findIndex(users, { username });\n\n  setUsers([\n    ...users.slice(0, userIndex),\n    {\n      ...users[userIndex],\n      username,\n      description,\n    },\n    ...users.slice(userIndex + 1),\n  ]);\n\n  return username;\n};\n","import { call, takeEvery, all, put } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\n\nimport {\n  ADD_USER,\n  SIGN_IN_USER,\n  DELETE_USER,\n  UPDATE_USER,\n  User,\n  AddUser,\n  DeleteUser,\n  UpdateUser,\n} from './types';\nimport { addUserSuccess, addUserFailure, signInUserSuccess, signInUserFailure } from './actions';\nimport { createUser, loginUser, removeUser, changeUser } from '../api';\n\nfunction* addUser(action: AddUser) {\n  try {\n    const user: User = yield call(createUser, action.payload);\n    yield put(addUserSuccess(user));\n    yield put(push('/'));\n  } catch (e) {\n    yield put(addUserFailure(e.message));\n  }\n}\n\nfunction* signInUser(action: AddUser) {\n  try {\n    const user: User = yield call(loginUser, action.payload);\n    yield put(signInUserSuccess(user));\n    yield put(push('/'));\n  } catch (e) {\n    yield put(signInUserFailure(e.message));\n  }\n}\n\nfunction* deleteUser(action: DeleteUser) {\n  yield call(removeUser, action.payload);\n}\n\nfunction* updateUser(action: UpdateUser) {\n  yield call(changeUser, action.payload);\n}\n\nfunction* watchCreate() {\n  yield takeEvery(ADD_USER, addUser);\n}\n\nfunction* watchLogin() {\n  yield takeEvery(SIGN_IN_USER, signInUser);\n}\n\nfunction* watchDelete() {\n  yield takeEvery(DELETE_USER, deleteUser);\n}\n\nfunction* watchUpdate() {\n  yield takeEvery(UPDATE_USER, updateUser);\n}\n\nexport default function* userSaga() {\n  yield all([watchCreate(), watchLogin(), watchDelete(), watchUpdate()]);\n}\n","import { get, flow } from 'lodash/fp';\n\nimport { USER_REDUCER_KEY } from './constants';\n\nconst getStateSlice = get(USER_REDUCER_KEY);\n\nexport const getIsAuthorized = flow(getStateSlice, get('isAuthorized'));\nexport const getUser = flow(getStateSlice, get('user'));\nexport const getError = flow(getStateSlice, get('error'));\n","import { default as reducer } from './reducer';\nimport { USER_REDUCER_KEY } from './constants';\n\nexport { default as userSaga } from './saga';\nexport * from './selectors';\nexport * from './actions';\n\nexport const userReducer = {\n  [USER_REDUCER_KEY]: reducer,\n};\n","import {\n  UserState,\n  UserActionTypes,\n  ADD_USER,\n  ADD_USER_SUCCESS,\n  ADD_USER_FAILURE,\n  SIGN_IN_USER,\n  SIGN_IN_USER_SUCCESS,\n  SIGN_IN_USER_FAILURE,\n  SIGN_OUT_USER,\n  DELETE_USER,\n  UPDATE_USER,\n} from './types';\nimport { initialState } from './constants';\n\nexport default function reducer(\n  state: UserState = initialState,\n  action: UserActionTypes\n): UserState {\n  switch (action.type) {\n    case SIGN_IN_USER:\n    case ADD_USER:\n      return {\n        ...state,\n      };\n    case SIGN_IN_USER_SUCCESS:\n    case ADD_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthorized: true,\n        error: null,\n      };\n    case SIGN_IN_USER_FAILURE:\n    case ADD_USER_FAILURE:\n      return {\n        ...state,\n        isAuthorized: false,\n        user: null,\n        error: action.payload,\n      };\n    case SIGN_OUT_USER:\n    case DELETE_USER:\n      return {\n        ...state,\n        isAuthorized: false,\n        user: null,\n      };\n    case UPDATE_USER:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { History } from 'history';\nimport { connectRouter } from 'connected-react-router';\n\nimport { userReducer } from '../modules/core/redux';\n\nexport default (history: History) =>\n  combineReducers({\n    router: connectRouter(history),\n    ...userReducer,\n  });\n","import { all } from 'redux-saga/effects';\n\nimport { userSaga } from '../modules/core/redux';\n\nexport default function* rootSaga() {\n  yield all([userSaga()]);\n}\n","import { createHashHistory } from 'history';\nimport { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport creteRootReducer from './reducers';\nimport saga from './sagas';\n\nexport const history = createHashHistory();\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default function configureStore(initialState?: any) {\n  const middlewares = [sagaMiddleware, routerMiddleware(history)];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n  const composedEnhancers = composeWithDevTools(middlewareEnhancer);\n  const rootReducer = creteRootReducer(history);\n  const store = createStore(rootReducer, initialState, composedEnhancers);\n\n  sagaMiddleware.run(saga);\n\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./reducers', () => store.replaceReducer(rootReducer));\n  }\n\n  return store;\n}\n","import React, { Fragment, ReactNode, FC } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    container: {\n      flexGrow: 1,\n      overflow: 'auto',\n    },\n  })\n);\n\ninterface Props {\n  children: ReactNode;\n}\n\nconst Layout: FC<Props> = ({ children }) => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      <CssBaseline />\n      <div className={classes.container}>\n        <Container maxWidth=\"md\">{children}</Container>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import React, { FC, ReactNode } from 'react';\nimport MUILink from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  children: ReactNode;\n  className?: string;\n}\n\nconst Link: FC<Props> = ({ to, children, className }) => {\n  return (\n    <MUILink component={RouterLink} to={to} className={className}>\n      {children}\n    </MUILink>\n  );\n};\n\nexport default Link;\n","import React, { FC, ReactNode } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport Link from './Link';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexShrink: 0,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    link: {\n      color: theme.palette.background.default,\n    },\n  })\n);\n\ninterface Props {\n  title: ReactNode;\n  isAuthorized: boolean;\n  onLogout: () => void;\n}\n\nconst AppTopBar: FC<Props> = ({ title, isAuthorized, onLogout }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            <Link to=\"/\" className={classes.link}>\n              {title}\n            </Link>\n          </Typography>\n          {isAuthorized ? (\n\n            <Button color=\"inherit\" onClick={onLogout}>\n              Logout\n            </Button>\n          ) : (\n            <>\n              <Button color=\"inherit\">\n                <Link to=\"/registration\" className={classes.link}>\n                  Register\n                </Link>\n              </Button>\n              <Button color=\"inherit\">\n                <Link to=\"/login\" className={classes.link}>\n                  Login\n                </Link>\n              </Button>\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default AppTopBar;\n","import React, { FC } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      height: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  })\n);\n\nconst Spinner: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { FC, useCallback, useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport { User } from '../redux/types';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\ninterface Props {\n  title: string;\n  buttonLabel: string;\n  error?: string;\n  onSubmit: (user: User) => void;\n}\n\nconst Form: FC<Props> = ({ title, buttonLabel, onSubmit, error }) => {\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleUsernameChange = useCallback(e => setUsername(e.target.value), []);\n  const handlePasswordChange = useCallback(e => setPassword(e.target.value), []);\n\n  const handleSubmit = useCallback(\n    e => {\n      e.preventDefault();\n\n      onSubmit({ username, password });\n    },\n    [username, password, onSubmit]\n  );\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          {title}\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            onChange={handleUsernameChange}\n            value={username}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            onChange={handlePasswordChange}\n            value={password}\n            autoComplete=\"current-password\"\n          />\n          {error && <div>{error}</div>}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {buttonLabel}\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default Form;\n","import React, { FC, ReactNode, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { getIsAuthorized } from '../redux';\n\ninterface Props {\n  children: ReactNode;\n  path: string;\n}\n\nconst PrivateRoute: FC<Props> = ({ children, ...rest }) => {\n  const isAuthorized = useSelector(getIsAuthorized);\n  const render = useCallback(\n    ({ location }) =>\n      isAuthorized ? (\n        children\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login',\n            state: { from: location },\n          }}\n        />\n      ),\n    [children, isAuthorized]\n  );\n  return <Route {...rest} render={render} />;\n};\n\nexport default PrivateRoute;\n","import React, { FC, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Form } from '../../core';\nimport { addUser, getError } from '../../core/redux';\nimport { User } from '../../core/redux/types';\n\nconst RegistrationForm: FC = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(getError);\n\n  const handleSubmit = useCallback(\n    (user: User) => {\n      dispatch(addUser(user));\n    },\n    [dispatch]\n  );\n\n  return <Form title=\"Registration\" buttonLabel=\"Register\" onSubmit={handleSubmit} error={error} />;\n};\n\nexport default RegistrationForm;\n","import React, { FC, useCallback } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Form } from '../../core';\nimport { signInUser, getError } from '../../core/redux';\nimport { User } from '../../core/redux/types';\n\nconst LoginForm: FC = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(getError);\n\n  const handleSubmit = useCallback(\n    (user: User) => {\n      dispatch(signInUser(user));\n    },\n    [dispatch]\n  );\n\n  return <Form title=\"Sign In\" buttonLabel=\"Login\" onSubmit={handleSubmit} error={error} />;\n};\n\nexport default LoginForm;\n","import React, { FC, useCallback, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { getUser, deleteUser, updateUser } from '../../core/redux';\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    container: {\n      marginTop: theme.spacing(8),\n    },\n    buttonContainer: {\n      display: 'flex',\n      justifyContent: 'space-evenly',\n      marginTop: theme.spacing(2),\n    },\n  })\n);\n\nconst Profile: FC = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(getUser);\n  const [description, setDescription] = useState(user.description);\n\n  const styles = useStyles();\n  const handleSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      dispatch(\n        updateUser({\n          ...user,\n          description,\n        })\n      );\n    },\n    [dispatch, user, description]\n  );\n  const handleChangeDesc = useCallback(e => {\n    setDescription(e.target.value);\n  }, []);\n\n  const handleDelete = useCallback(() => {\n    dispatch(deleteUser(user.username));\n  }, [user, dispatch]);\n\n  return (\n    <div className={styles.container}>\n      <CssBaseline />\n      <Typography variant=\"h4\">{user.username}</Typography>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          label=\"Description\"\n          id=\"description\"\n          fullWidth\n          multiline\n          onChange={handleChangeDesc}\n          value={description}\n        />\n        <div className={styles.buttonContainer}>\n          <Button type=\"button\" variant=\"contained\" color=\"secondary\" onClick={handleDelete}>\n            Delete Profile\n          </Button>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Update Profile\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { FC, useCallback } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Layout, PrivateRoute, AppBar } from './modules/core';\nimport { RegistrationForm } from './modules/registration';\nimport { LoginForm } from './modules/login';\nimport { Profile } from './modules/profile';\nimport { history } from './store';\nimport { getIsAuthorized, signOutUser } from './modules/core/redux';\n\ninterface Props {\n  appName: string;\n}\n\nconst App: FC<Props> = ({ appName }) => {\n  const dispatch = useDispatch();\n  const isAuthorized = useSelector(getIsAuthorized);\n\n  const handleLogout = useCallback(() => {\n    dispatch(signOutUser());\n  }, [dispatch]);\n\n  return (\n    <ConnectedRouter history={history}>\n      <AppBar title={appName} isAuthorized={isAuthorized} onLogout={handleLogout} />\n      <Layout>\n        <Switch>\n          <Route path=\"/registration\">\n            <RegistrationForm />\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm />\n          </Route>\n          <PrivateRoute path=\"/\">\n            <Profile />\n          </PrivateRoute>\n        </Switch>\n      </Layout>\n    </ConnectedRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\n\nimport App from './App';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App appName=\"Test App\" />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}