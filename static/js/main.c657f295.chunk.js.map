{"version":3,"sources":["modules/core/redux/constants.ts","modules/core/redux/auth.duck.ts","modules/core/redux/user.duck.ts","store/reducers.ts","modules/core/api/utils.ts","modules/core/api/index.ts","modules/core/redux/auth.saga.ts","modules/core/redux/user.saga.ts","store/sagas.ts","store/index.ts","modules/core/components/Layout.tsx","modules/core/components/Link.tsx","modules/core/components/AppBar.tsx","modules/core/components/Spinner.tsx","modules/core/components/Form.tsx","modules/core/components/PrivateRoute.tsx","modules/registration/hooks/useRegistrationForm.ts","modules/registration/components/RegistrationForm.tsx","modules/login/hooks/useLoginForm.ts","modules/login/components/LoginForm.tsx","modules/profile/components/Profile.tsx","modules/profile/hooks/useProfileForm.ts","App.tsx","index.tsx"],"names":["initialAsyncState","loading","data","error","signIn","createAsyncAction","signOut","authReducer","createReducer","handleAction","request","state","success","failure","action","payload","getStateSlice","get","getIsAuthorized","flow","getAuthError","addUser","updateUser","deleteUser","userReducer","getUser","getUserError","history","combineReducers","router","connectRouter","omitPassword","omit","getUsers","usersStringified","localStorage","getItem","JSON","parse","setUsers","users","setItem","stringify","createUser","user","find","username","Error","newUser","password","md5","changeUser","description","userIndex","findIndex","updatedUser","slice","removeUser","loginUser","userInDb","signInProcessing","watchLogin","processSignOut","watchLogout","authSaga","call","put","push","message","i","take","delay","takeEvery","getType","all","processAddUser","processUpdateUser","processDeleteUser","watchCreate","watchUpdate","watchDelete","userSaga","rootSaga","createHashHistory","sagaMiddleware","createSagaMiddleware","useStyles","makeStyles","createStyles","container","flexGrow","overflow","Layout","children","classes","CssBaseline","className","Container","maxWidth","Link","to","component","RouterLink","theme","root","flexShrink","menuButton","marginRight","spacing","title","link","color","palette","background","default","AppTopBar","isAuthorized","onLogout","AppBar","position","Toolbar","Typography","variant","Button","onClick","height","display","justifyContent","alignItems","paper","marginTop","flexDirection","avatar","margin","backgroundColor","secondary","light","form","width","submit","errorMessage","main","Form","buttonLabel","formik","icon","Avatar","noValidate","onSubmit","handleSubmit","TextField","required","fullWidth","id","name","label","errors","helperText","autoComplete","onChange","handleChange","value","values","autoFocus","type","PrivateRoute","rest","useSelector","render","useCallback","location","pathname","from","validationSchema","Yup","shape","min","max","matches","RegistrationForm","dispatch","useDispatch","useFormik","initialValues","useRegistrationForm","LoginForm","authError","useLoginForm","field","buttonContainer","Profile","useProfileForm","handleDelete","multiline","App","appName","handleLogout","path","store","initialState","middlewares","routerMiddleware","middlewareEnhancer","applyMiddleware","composedEnhancers","composeWithDevTools","rootReducer","creteRootReducer","createStore","run","saga","configureStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c657f295.chunk.js","sourcesContent":["import { AsyncStateSlice } from './interfaces';\n\nexport const initialAsyncState: AsyncStateSlice<null> = {\n  loading: false,\n  data: null,\n  error: null,\n};\n","import { ActionType, createReducer, createAsyncAction } from 'typesafe-actions';\nimport { get, flow } from 'lodash/fp';\n\nimport { User } from '../interfaces';\n\nimport { AsyncStateSlice } from './interfaces';\nimport { initialAsyncState } from './constants';\n\nconst AUTH_REDUCER_KEY = 'auth';\n\n// ACTIONS:\n\nexport const signIn = createAsyncAction('SIGN_IN_REQUEST', 'SIGN_IN_SUCCESS', 'SIGN_IN_FAILURE')<\n  User,\n  void,\n  string\n>();\n\nexport const signOut = createAsyncAction(\n  'SIGN_OUT_REQUEST',\n  'SIGN_OUT_SUCCESS',\n  'SIGN_OUT_FAILURE'\n)<void, void, string>();\n\nexport type AuthActions = ActionType<typeof signIn | typeof signOut>;\n\n// REDUCER:\n\ntype userState = AsyncStateSlice<boolean | null>;\n\nconst authReducer = createReducer<userState, AuthActions>(initialAsyncState)\n  .handleAction(signIn.request, state => ({\n    ...state,\n    data: false,\n    loading: true,\n    error: null,\n  }))\n  .handleAction(signIn.success, state => ({\n    ...state,\n    data: true,\n    loading: false,\n    error: null,\n  }))\n  .handleAction(signIn.failure, (state, action) => ({\n    ...state,\n    data: false,\n    loading: false,\n    error: action.payload,\n  }))\n  .handleAction(signOut.request, state => ({\n    ...state,\n    loading: true,\n    error: null,\n  }))\n  .handleAction(signOut.success, (state, action) => ({\n    ...state,\n    data: false,\n    loading: false,\n    error: null,\n  }))\n  .handleAction(signOut.failure, (state, action) => ({\n    ...state,\n    loading: false,\n    error: action.payload,\n  }));\n\n// SELECTORS:\n\nconst getStateSlice = get(AUTH_REDUCER_KEY);\n\nexport const getIsAuthorized = flow(getStateSlice, get('data'));\nexport const getAuthError = flow(getStateSlice, get('error'));\nexport const getAuthIsProcessing = flow(getStateSlice, get('loading'));\n\nexport default {\n  [AUTH_REDUCER_KEY]: authReducer,\n};\n","import { ActionType, createReducer, createAsyncAction } from 'typesafe-actions';\nimport { get, flow } from 'lodash/fp';\n\nimport { User } from '../interfaces';\n\nimport { AsyncStateSlice } from './interfaces';\nimport { initialAsyncState } from './constants';\n\nconst USER_REDUCER_KEY = 'user';\n\n// ACTIONS:\n\nexport const addUser = createAsyncAction(\n  'ADD_USER_REQUEST',\n  'ADD_USER_SUCCESS',\n  'ADD_USER_FAILURE'\n)<User, User, string>();\n\nexport const updateUser = createAsyncAction(\n  'UPDATE_USER_REQUEST',\n  'UPDATE_USER_SUCCESS',\n  'UPDATE_USER_FAILURE'\n)<Partial<User>, User, string>();\n\nexport const deleteUser = createAsyncAction(\n  'DELETE_USER_REQUEST',\n  'DELETE_USER_SUCCESS',\n  'DELETE_USER_FAILURE'\n)<User['username'], undefined, string>();\n\nexport type UserActions = ActionType<typeof addUser | typeof updateUser | typeof deleteUser>;\n\n// REDUCER:\n\ntype userState = AsyncStateSlice<User | null>;\n\nconst userReducer = createReducer<userState, UserActions>(initialAsyncState)\n  .handleAction(addUser.success, (state, action) => ({\n    ...state,\n    data: action.payload,\n    loading: false,\n    error: null,\n  }))\n  .handleAction(addUser.failure, (state, action) => ({\n    ...state,\n    data: null,\n    loading: false,\n    error: action.payload,\n  }))\n  .handleAction(updateUser.request, state => ({\n    ...state,\n    loading: true,\n    error: null,\n  }))\n  .handleAction(updateUser.success, (state, action) => ({\n    ...state,\n    data: action.payload,\n    loading: false,\n    error: null,\n  }))\n  .handleAction(updateUser.failure, (state, action) => ({\n    ...state,\n    loading: false,\n    error: action.payload,\n  }))\n  .handleAction(deleteUser.request, state => ({\n    ...state,\n    loading: true,\n    error: null,\n  }))\n  .handleAction(deleteUser.success, state => ({\n    ...state,\n    data: null,\n    loading: false,\n    error: null,\n  }))\n  .handleAction(deleteUser.failure, (state, action) => ({\n    ...state,\n    loading: false,\n    error: action.payload,\n  }));\n\n// SELECTORS:\n\nconst getStateSlice = get(USER_REDUCER_KEY);\n\nexport const getUser = flow(getStateSlice, get('data'));\nexport const getUserError = flow(getStateSlice, get('error'));\nexport const getUserIsSaving = flow(getStateSlice, get('loading'));\n\nexport default {\n  [USER_REDUCER_KEY]: userReducer,\n};\n","import { combineReducers } from 'redux';\nimport { History } from 'history';\nimport { connectRouter } from 'connected-react-router';\n\nimport authReducer from '../modules/core/redux/auth.duck';\nimport userReducer from '../modules/core/redux/user.duck';\n\nexport default (history: History) =>\n  combineReducers({\n    router: connectRouter(history),\n    ...authReducer,\n    ...userReducer,\n  });\n","import { omit } from 'lodash/fp';\n\nexport const omitPassword = omit(['password']);\n\nexport const getUsers = () => {\n  const usersStringified = localStorage.getItem('users');\n\n  return usersStringified ? JSON.parse(usersStringified) : [];\n};\n\nexport const setUsers = <T>(users: T[]) => {\n  localStorage.setItem('users', JSON.stringify(users));\n};\n","import { find, findIndex } from 'lodash';\nimport md5 from 'md5';\n\nimport { User } from '../interfaces';\n\nimport { omitPassword, getUsers, setUsers } from './utils';\n\nexport const createUser = (user: User) => {\n  const users = getUsers();\n\n  if (find(users, { username: user.username })) {\n    throw new Error('Already exist');\n  }\n\n  const newUser = { ...user, password: md5(user.password!) };\n\n  setUsers<User>([...users, newUser]);\n\n  return omitPassword(newUser);\n};\n\nexport const changeUser = ({ username, description }: Partial<User>) => {\n  const users = getUsers();\n  const userIndex = findIndex(users, { username });\n  const updatedUser = {\n    ...users[userIndex],\n    username,\n    description,\n  };\n\n  setUsers<User>([\n    ...users.slice(0, userIndex),\n    {\n      ...users[userIndex],\n      username,\n      description,\n    },\n    ...users.slice(userIndex + 1),\n  ]);\n\n  return omitPassword(updatedUser);\n};\n\nexport const removeUser = (username: string) => {\n  const users = getUsers();\n  const userIndex = findIndex(users, { username });\n\n  setUsers<User>([...users.slice(0, userIndex), ...users.slice(userIndex + 1)]);\n\n  return username;\n};\n\nexport const loginUser = (user: User) => {\n  const users = getUsers();\n  const userInDb = find(users, { username: user.username });\n\n  if (!userInDb) {\n    throw new Error('User does not exist');\n  }\n\n  if (userInDb.password !== md5(user.password!)) {\n    throw new Error('Wrong password');\n  }\n\n  return omitPassword(userInDb);\n};\n","import { call, take, delay, all, put, takeEvery } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport { getType } from 'typesafe-actions';\n\nimport { User } from '../interfaces';\nimport { loginUser } from '../api';\n\nimport { addUser, deleteUser } from './user.duck';\nimport { signIn, signOut } from './auth.duck';\n\nfunction* signInProcessing(action: ReturnType<typeof signIn.request>) {\n  try {\n    const user: User = yield call(loginUser, action.payload);\n\n    yield put(signIn.success());\n    yield put(addUser.success(user));\n    yield put(push('/'));\n  } catch (e) {\n    yield put(signIn.failure(e.message));\n    return e;\n  }\n}\n\nfunction* watchLogin() {\n  let i = 0;\n\n  while (true) {\n    if (i < 3) {\n      const action = yield take(signIn.request);\n      const signInResult = yield call(signInProcessing, action);\n\n      if (signInResult instanceof Error) i++;\n    } else {\n      yield put(signIn.failure('You are blocked for 1 minute!'));\n      i = yield delay(60000, 0);\n    }\n  }\n}\n\nfunction* processSignOut() {\n  try {\n    // yield call(logoutUser);\n    yield put(signOut.success());\n    // Remove user from redux state;\n    yield put(deleteUser.success());\n    yield put(push('/login'));\n  } catch (e) {\n    yield put(signOut.failure(e.message));\n    return e;\n  }\n}\n\nfunction* watchLogout() {\n  yield takeEvery(getType(signOut.request), processSignOut);\n}\nexport default function* authSaga() {\n  yield all([watchLogin(), watchLogout()]);\n}\n","import { call, takeEvery, all, put } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport { getType } from 'typesafe-actions';\n\nimport { User } from '../interfaces';\nimport { createUser, removeUser, changeUser } from '../api';\n\nimport { signIn, signOut } from './auth.duck';\nimport { addUser, updateUser, deleteUser } from './user.duck';\n\nfunction* processAddUser(action: ReturnType<typeof addUser.request>) {\n  try {\n    const user: User = yield call(createUser, action.payload);\n    yield put(addUser.success(user));\n    yield put(signIn.success());\n    yield put(push('/'));\n  } catch (e) {\n    yield put(addUser.failure(e.message));\n  }\n}\n\nfunction* processUpdateUser(action: ReturnType<typeof updateUser.request>) {\n  try {\n    const user: User = yield call(changeUser, action.payload);\n\n    yield put(updateUser.success(user));\n  } catch (e) {\n    yield put(updateUser.failure(e.message));\n  }\n}\n\nfunction* processDeleteUser(action: ReturnType<typeof deleteUser.request>) {\n  try {\n    yield call(removeUser, action.payload);\n    yield put(deleteUser.success());\n    yield put(signOut.success());\n    yield put(push('/login'));\n  } catch (e) {\n    yield put(deleteUser.failure(e.message));\n  }\n}\n\nfunction* watchCreate() {\n  yield takeEvery(getType(addUser.request), processAddUser);\n}\n\nfunction* watchUpdate() {\n  yield takeEvery(getType(updateUser.request), processUpdateUser);\n}\n\nfunction* watchDelete() {\n  yield takeEvery(getType(deleteUser.request), processDeleteUser);\n}\n\nexport default function* userSaga() {\n  yield all([watchCreate(), watchUpdate(), watchDelete()]);\n}\n","import { all } from 'redux-saga/effects';\n\nimport authSaga from '../modules/core/redux/auth.saga';\nimport userSaga from '../modules/core/redux/user.saga';\n\nexport default function* rootSaga() {\n  yield all([authSaga(), userSaga()]);\n}\n","import { createHashHistory } from 'history';\nimport { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport creteRootReducer from './reducers';\nimport saga from './sagas';\n\nexport const history = createHashHistory();\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default function configureStore(initialState?: any) {\n  const middlewares = [sagaMiddleware, routerMiddleware(history)];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n  const composedEnhancers = composeWithDevTools(middlewareEnhancer);\n  const rootReducer = creteRootReducer(history);\n  const store = createStore(rootReducer, initialState, composedEnhancers);\n\n  sagaMiddleware.run(saga);\n\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./reducers', () => store.replaceReducer(rootReducer));\n  }\n\n  return store;\n}\n","import React, { Fragment, ReactNode, FC } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    container: {\n      flexGrow: 1,\n      overflow: 'auto',\n    },\n  })\n);\n\ninterface Props {\n  children: ReactNode;\n}\n\nconst Layout: FC<Props> = ({ children }) => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      <CssBaseline />\n      <div className={classes.container}>\n        <Container maxWidth=\"md\">{children}</Container>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import React, { FC, ReactNode } from 'react';\nimport MUILink from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  children: ReactNode;\n  className?: string;\n}\n\nconst Link: FC<Props> = ({ to, children, className }) => {\n  return (\n    <MUILink component={RouterLink} to={to} className={className}>\n      {children}\n    </MUILink>\n  );\n};\n\nexport default Link;\n","import React, { FC, ReactNode } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport Link from './Link';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexShrink: 0,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    link: {\n      color: theme.palette.background.default,\n    },\n  })\n);\n\ninterface Props {\n  title: ReactNode;\n  isAuthorized: boolean;\n  onLogout: () => void;\n}\n\nconst AppTopBar: FC<Props> = ({ title, isAuthorized, onLogout }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            <Link to=\"/\" className={classes.link}>\n              {title}\n            </Link>\n          </Typography>\n          {isAuthorized ? (\n            <Button color=\"inherit\" onClick={onLogout}>\n              Logout\n            </Button>\n          ) : (\n            <>\n              <Button color=\"inherit\">\n                <Link to=\"/registration\" className={classes.link}>\n                  Register\n                </Link>\n              </Button>\n              <Button color=\"inherit\">\n                <Link to=\"/login\" className={classes.link}>\n                  Login\n                </Link>\n              </Button>\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default AppTopBar;\n","import React, { FC } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      height: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  })\n);\n\nconst Spinner: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { FC, ReactNode } from 'react';\nimport { FormikProps } from 'formik';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport { User } from '../interfaces';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.light,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  errorMessage: {\n    color: theme.palette.error.main,\n  },\n}));\n\ninterface Props {\n  title: string;\n  buttonLabel: string;\n  error?: string;\n  icon?: ReactNode;\n  formik: FormikProps<User>;\n}\n\nconst Form: FC<Props> = ({ title, buttonLabel, formik, error, icon }) => {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>{icon ? icon : <LockOutlinedIcon />}</Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          {title}\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={formik.handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            name=\"username\"\n            label=\"Username\"\n            error={!!formik.errors.username}\n            helperText={formik.errors.username}\n            autoComplete=\"username\"\n            onChange={formik.handleChange}\n            value={formik.values.username}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            error={!!formik.errors.password}\n            helperText={formik.errors.password}\n            onChange={formik.handleChange}\n            value={formik.values.password}\n            autoComplete=\"current-password\"\n          />\n          {error && <div className={classes.errorMessage}>{error}</div>}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {buttonLabel}\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default Form;\n","import React, { FC, ReactNode, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { getIsAuthorized } from '../redux/auth.duck';\n\ninterface Props {\n  children: ReactNode;\n  path: string;\n}\n\nconst PrivateRoute: FC<Props> = ({ children, ...rest }) => {\n  const isAuthorized = useSelector(getIsAuthorized);\n  const render = useCallback(\n    ({ location }) =>\n      isAuthorized ? (\n        children\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login',\n            state: { from: location },\n          }}\n        />\n      ),\n    [children, isAuthorized]\n  );\n  return <Route {...rest} render={render} />;\n};\n\nexport default PrivateRoute;\n","import { useCallback } from 'react';\nimport { useFormik, FormikProps } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\n\nimport { User } from '../../core/interfaces';\nimport { addUser } from '../../core/redux/user.duck';\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  password: Yup.string()\n    .required('No password provided.')\n    .min(8, 'Password is too short - should be 8 chars minimum.')\n    .matches(/\\S/, 'Password can only contain non whitespace character.'),\n});\n\nexport default function useProfileForm() {\n  const dispatch = useDispatch();\n  const onSubmit = useCallback(\n    user => {\n      dispatch(addUser.request(user));\n    },\n    [dispatch]\n  );\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: '',\n    },\n    onSubmit,\n    validationSchema,\n  }) as FormikProps<User>;\n\n  return formik;\n}\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\n\nimport { Form } from '../../core';\nimport { getUserError } from '../../core/redux/user.duck';\nimport useRegistrationForm from '../hooks/useRegistrationForm';\n\nconst RegistrationForm: FC = () => {\n  const error = useSelector(getUserError);\n  const formik = useRegistrationForm();\n\n  return (\n    <Form\n      icon={<PersonAddIcon />}\n      title=\"Registration\"\n      buttonLabel=\"Register\"\n      formik={formik}\n      error={error}\n    />\n  );\n};\n\nexport default RegistrationForm;\n","import { useCallback } from 'react';\nimport { useFormik, FormikProps } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\n\nimport { User } from '../../core/interfaces';\nimport { signIn } from '../../core/redux/auth.duck';\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  password: Yup.string().required('No password provided.'),\n});\n\nexport default function useProfileForm() {\n  const dispatch = useDispatch();\n  const onSubmit = useCallback(\n    user => {\n      dispatch(signIn.request(user));\n    },\n    [dispatch]\n  );\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: '',\n    },\n    onSubmit,\n    validationSchema,\n  }) as FormikProps<User>;\n\n  return formik;\n}\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Form } from '../../core';\nimport { getAuthError } from '../../core/redux/auth.duck';\nimport useLoginForm from '../hooks/useLoginForm';\n\nconst LoginForm: FC = () => {\n  const authError = useSelector(getAuthError);\n  const formik = useLoginForm();\n\n  return <Form title=\"Sign In\" buttonLabel=\"Login\" formik={formik} error={authError} />;\n};\n\nexport default LoginForm;\n","import React, { FC, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { User } from '../../core/interfaces';\nimport { getUser, deleteUser } from '../../core/redux/user.duck';\nimport useProfileForm from '../hooks/useProfileForm';\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    container: {\n      marginTop: theme.spacing(8),\n    },\n    field: {\n      marginTop: theme.spacing(2),\n    },\n    buttonContainer: {\n      display: 'flex',\n      justifyContent: 'space-evenly',\n      marginTop: theme.spacing(2),\n    },\n  })\n);\n\nconst Profile: FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const user = useSelector(getUser);\n  const formik = useProfileForm<User>({\n    initialValues: user,\n  });\n\n  const handleDelete = useCallback(() => {\n    dispatch(deleteUser.request(user.username));\n  }, [user, dispatch]);\n\n  return (\n    <div className={classes.container}>\n      <CssBaseline />\n      <Typography variant=\"h4\">{user.username}</Typography>\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          className={classes.field}\n          label=\"Description\"\n          id=\"description\"\n          fullWidth\n          multiline\n          autoFocus\n          onChange={formik.handleChange}\n          value={formik.values.description}\n        />\n        <div className={classes.buttonContainer}>\n          <Button type=\"button\" variant=\"contained\" color=\"secondary\" onClick={handleDelete}>\n            Delete Profile\n          </Button>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Update Profile\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Profile;\n","import { useCallback } from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport { updateUser } from '../../core/redux/user.duck';\n\nexport default function useProfileForm<T>({ initialValues }: { initialValues: T }) {\n  const dispatch = useDispatch();\n  const onSubmit = useCallback(\n    values => {\n      dispatch(updateUser.request(values));\n    },\n    [dispatch]\n  );\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n  });\n\n  return formik;\n}\n","import React, { FC, useCallback } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Layout, PrivateRoute, AppBar } from './modules/core';\nimport { RegistrationForm } from './modules/registration';\nimport { LoginForm } from './modules/login';\nimport { Profile } from './modules/profile';\nimport { history } from './store';\nimport { getIsAuthorized, signOut } from './modules/core/redux/auth.duck';\n\ninterface Props {\n  appName: string;\n}\n\nconst App: FC<Props> = ({ appName }) => {\n  const dispatch = useDispatch();\n  const isAuthorized = useSelector(getIsAuthorized);\n\n  const handleLogout = useCallback(() => {\n    dispatch(signOut.request());\n  }, [dispatch]);\n\n  return (\n    <ConnectedRouter history={history}>\n      <AppBar title={appName} isAuthorized={isAuthorized} onLogout={handleLogout} />\n      <Layout>\n        <Switch>\n          <Route path=\"/registration\">\n            <RegistrationForm />\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm />\n          </Route>\n          <PrivateRoute path=\"/\">\n            <Profile />\n          </PrivateRoute>\n        </Switch>\n      </Layout>\n    </ConnectedRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\n\nimport App from './App';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App appName=\"Test App\" />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}